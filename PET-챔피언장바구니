##사람이름 -> 시즌5챔피언 얻는 함수
f_s5<-function(names){
  if(!is.element('XML', installed.packages()[,1]))
  {install.packages('XML')
  }else {print("XML library already installed")}
  library(XML)
  names$url<-paste("http://fow.kr/find/", names$names, sep="")
  raw<-lapply(as.list(paste(names$url, sep="/")), 
         function(x){
           readHTMLTable(x, header=F)})
 raw_s5<-lapply(raw, function(x){return(x[6])})
 raw_s5_chmp<-lapply(raw_s5, function(x){return(data.frame(x))})
 raw_s5_chmp_names<-lapply(raw_s5_chmp, function(x){x[,1]})
 names(raw_s5_chmp_names)<-names$names
  return(raw_s5_chmp_names)
}


input<-data.frame(names=c("ondraz", "huskee", "ted"))
f_s5(input)->output
cn<-read.csv(file.choose())
c.list<-as.factor(cn$names)


output[]<-lapply(output, factor, levels=levels(c.list))
library (plyr)
df <- ldply (output, data.frame)
names(df)<-c("player", "cmp")
df[!duplicated(df), ]

split(df$cmp, df$player)->split.df
library(arules)
trans.df<-as(split.df, "transactions")
rules<- apriori(trans.df)




//히트맵 그릴떄 사용한 것


df<-read.csv(file.choose())
library(arules)
champion.list<-split(df$champion_id, df$account_id)
champion.transaction<-as(champion.list, "transactions")
champion.transaction

rules<-apriori(champion.transaction, parameter= list(supp = 0.25, conf = 0.7, target = "rules")
              )
summary(rules)

rule.list<-as.data.frame(inspect(rules))
rule.list<-rule.list[order(rule.list$lift, decreasing=TRUE), ]
rule.list
write.csv(rule.list, "rlist2.csv")

library(ggplot2)
library(RColorBrewer)
library(plyr)

library(ggthemes)
library(viridis)



df2<-read.csv(file.choose())

gg<-ggplot(df2, aes(x=asso, y=base, fill=lift))
gg<-gg+geom_tile(color="white", size=0.1)
gg<-gg+ scale_fill_viridis(name="# Events")
gg <- gg + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=9))
gg



















