//테이블 만들어서 csv 파일 로드하기

CREATE TABLE bi_sandbox.mjang_ps3
(
account_id INT,
bad_date DATE,
ban_type varchar(255),
ML_tag INT,
duration INT
);

copy  bi_sandbox.mjang_ps3 from local 
'C:\Users\mjang\Desktop\Business analytics\projects\ps 문의자 분석\banlist.csv' delimiter E',' enclosed by '"';

//결과 파일로 내보내기

@export on;
@export set filename="C:\Users/\mjang\Documents\sample3.txt" delimiter E',' enclosed by ',"' ;
select * from 테이블  limit 13


 hive -e "select * from 테이블 where dt = '2016-01-01' limit 1;">outttt.tsv


//시간 변환


 SELECT 
    punishment_type, punishment_reason, game_id, account_id ,origin_system, games_punished
    , date_format(from_unixtime(created_millis/1000), '%Y-%m-%d') as start_date
    , date_format(from_unixtime(expiration_millis/1000), '%Y-%m-%d') as end_date

FROM
    punishment_record where shard_id = 'KR' 
	AND date_format(from_unixtime(created_millis/1000), '%Y-%m-%d') >= '2016-01-01'

LIMIT 1000;



///최소 최대 기준으로 다른 커럶 값 추출
select store_account_id, max(transaction_datetime), max(last_rp) from 
(select store_account_id, transaction_datetime, rp_balance, last_value(rp_balance) over(partition by store_account_id order by transaction_datetime range between unbounded preceding and unbounded following) last_rp
from staging.store_transactions where realm_id=4 and store_account_id in (8262768, 3299238)) A group by store_account_id

/// 최초 값 3개만 선택하기
SELECT 
F3.*, 
FROM
        (select C.*
        FROM
        (SELECT A.*, B.game_id, row_number() over (PARTITION by B.account_id order by B.game_id desc) as R 
        FROM
        (select * from bi_sandbox.mjang_smurf_survey) A
        left outer join
        (select account_id, game_id from bi_sandbox.gulee_legs_kda order by game_id desc) B 
        on A.account_id = B.account_id) C
        where R<4) F3
LEFT OUTER JOIN





///문자열만 추출

SELECT base.account_id, user_name, (CASE WHEN length(front_name) < 1 then 0 else front_count end) as front_count, front_name, length(front_name) as front_len, back_name FROM
                (select A.account_id, user_name, regexp_replace(user_name, '\d.*$', '') as front_name, regexp_replace(user_name, '^([^\d]*\d*)', '') as back_name 
                from bi_sandbox.mjang_smurf_survey A
                LEFT OUTER JOIN
                 staging.platform_accounts B
                on A.account_id = B.account_id
                where B.realm_id = 4) base
        LEFT OUTER JOIN 
                (select regexp_replace(user_name, '\d.*$', '') as front,  count(distinct(account_id)) as front_count
                from  staging.platform_accounts where realm_id = 4 group by front) front
                ON BASE.front_name = front.front
                group by account_id,  front_count,  front_name, back_name, user_name
                
  ///INSERT + SELECT 쓰는 방법
create table bi_sandbox.mjang_table1 
as (select account_id, active_current_month from bi_reports.monthly_unique_players where realm_id = 4 and current_month_start_date = '2016-07-01' limit 100);

insert into bi_sandbox.mjang_table1 (account_id, active_current_month)
select  account_id, active_current_month from bi_reports.monthly_unique_players where realm_id = 4 and current_month_start_date = '2016-06-01' limit 20


//유형 별로 제일 처음 값 선택하기
SELECT n2016.account_id, TUTORIAL, MEDIUM
FROM
new_2017 as n2016
LEFT OUTER JOIN
(select account_id, min(case when difficulty = 'TUTORIAL' then game_length end) as TUTORIAL
                        , min(case when difficulty = 'MEDIUM' then game_length end) as MEDIUM
FROM
(select a.* from
(SELECT account_id, PG .game_id, difficulty, row_number() over (PARTITION by difficulty, account_id order by PG.game_id) as oder, 
TIMESTAMPDIFF(MINUTE,GH.create_datetime,PG.create_datetime)/60 as game_length
FROM
                        (select account_id, game_id, difficulty, create_datetime
                        from staging.audit_player_game_statistics where game_type = 'TUTORIAL_GAME' and realm_id =4 and difficulty is not null
                        group by account_id, game_id, difficulty, create_datetime) PG
                        LEFT OUTER JOIN
                         (select game_id, create_datetime
                        from staging.audit_game_config_history
                        where realm_id=4) GH ON PG.game_id = GH.game_id) A
where a.oder = 1) B group by account_id) B
ON n2016.account_id=B.account_id
