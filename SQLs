//테이블 만들어서 csv 파일 로드하기

CREATE TABLE bi_sandbox.mjang_ps3
(
account_id INT,
bad_date DATE,
ban_type varchar(255),
ML_tag INT,
duration INT
);

copy  bi_sandbox.mjang_ps3 from local 
'C:\Users\mjang\Desktop\Business analytics\projects\ps 문의자 분석\banlist.csv' delimiter E',' enclosed by '"';

//결과 파일로 내보내기

@export on;
@export set filename="C:\Users/\mjang\Documents\sample3.txt" delimiter E',' enclosed by ',"' ;
select * from 테이블  limit 13


 hive -e "select * from 테이블 where dt = '2016-01-01' limit 1;">outttt.tsv


//시간 변환


 SELECT 
    punishment_type, punishment_reason, game_id, account_id ,origin_system, games_punished
    , date_format(from_unixtime(created_millis/1000), '%Y-%m-%d') as start_date
    , date_format(from_unixtime(expiration_millis/1000), '%Y-%m-%d') as end_date

FROM
    punishment_record where shard_id = 'KR' 
	AND date_format(from_unixtime(created_millis/1000), '%Y-%m-%d') >= '2016-01-01'

LIMIT 1000;



///최소 최대 기준으로 다른 커럶 값 추출
select store_account_id, max(transaction_datetime), max(last_rp) from 
(select store_account_id, transaction_datetime, rp_balance, last_value(rp_balance) over(partition by store_account_id order by transaction_datetime range between unbounded preceding and unbounded following) last_rp
from staging.store_transactions where realm_id=4 and store_account_id in (8262768, 3299238)) A group by store_account_id


///일본 DAU 추출 기본 쿼리

SELECT 
DD, native_jp, count(distinct(dau.account_id))
FROM
(select account_id, date(create_datetime + interval '17 hours' ) as DD 
FROM staging.audit_player_game_statistics where realm_id = 62 group by account_id, DD) DAU
LEFT OUTER JOIN
(select c.ACCOUNT_ID, (case when c.native_jp = 0 or D.ping >40 then 0 else 1 end) as native_jp, ping
FROM
        (select A.account_id, sum(CASE WHEN B.realm_name='jp' then 1 else 0 end) as native_jp
        FROM
        ( select saa.account_id, saa.user_name FROM
        (select account_id, user_name, min(date(modify_datetime)) as min_date, date(modify_datetime) as normal_date
        from  staging.platform_accounts where realm_id = 62 group by account_id, user_name, normal_date) saa where saa.min_date = saa.normal_date
        group by account_id, user_name) A
        left outer join
        (select pvpnet_account_name, realm_name from staging.signup_pvpnet_accounts group by pvpnet_account_name, realm_name) B
        on A.user_name = B.pvpnet_account_name
       group by a.account_id order by native_jp) C
left outer join 
        (SELECT 
        account_id, avg(user_server_ping) as ping
        from staging.audit_player_game_statistics where realm_id = 62 group by account_id) D
on c.account_id = d.account_id ) BASE
on DAU.account_id= BASE.account_id group by dd, native_jp

////dau null을 ping 기준으로 구분
SELECT 
DD, native_jp, count(distinct(dau.account_id))
FROM
(select account_id, date(create_datetime + interval '17 hours' ) as DD 
FROM staging.audit_player_game_statistics where realm_id = 62 group by account_id, DD) DAU
LEFT OUTER JOIN
(select c.ACCOUNT_ID, 
(case when c.realm_name='jp' and ping < 40 then 1 
when realm_name is null and ping < 40 then 1 
else 0 end) as native_jp, 
ping, realm_name
FROM
        (select A.account_id, B.realm_name
        FROM
        ( select saa.account_id, saa.user_name FROM
        (select account_id, user_name, min(date(modify_datetime)) as min_date, date(modify_datetime) as normal_date
        from  staging.platform_accounts where realm_id = 62 group by account_id, user_name, normal_date) saa where saa.min_date = saa.normal_date
        group by account_id, user_name) A
        left outer join
        (select pvpnet_account_name, realm_name from staging.signup_pvpnet_accounts group by pvpnet_account_name, realm_name) B
        on A.user_name = B.pvpnet_account_name) C
left outer join 
        (SELECT 
        account_id, avg(user_server_ping) as ping
        from staging.audit_player_game_statistics where realm_id = 62 group by account_id) D
on c.account_id = d.account_id  ) BASE
on DAU.account_id= BASE.account_id group by dd, native_jp
